Bugfixes and enhancements to address:

  - The burn-in delay should not apply if the full-res data is already in the
    cache. Tweak display architecture to delay only if there is a cache miss.
    Checking for cache misses also needs to be thread-safe--think about this.

  - Finish updating online help to latest beta functionality
  
  - Include new help topics:

    Program options (Basic "File, Options" menu explanation)
      - General (Window docking, Floating control windows)
      - Warnings (Quitting VisBio also quits ImageJ)
      - Debug (Pop up console windows, Dump output to console)

  - Expand DataCache functionality to allow multiple dimensional positions in
    memory at once. This allows crisper, faster animation at full resolution.

  - Some derivative transforms are designed to be shown only in the same window
    as their parent transform (overlays, arbitrary slices). These transforms
    should return true for a new "isShownWithParent" method, and if they are
    added to a display that does not already contain their parent transform,
    the parent is automatically added first.

  - VisAD QT reader is horribly inefficient; clean up code to acceptable
    standards.

  - Eliminate all XML-based state stuff; switch back to standard vanilla text
    INI-style files, because they make more sense.

  - Overlays need to be fixed to work properly in 3D displays.

  - Overlays should not affect ScalarMap scaling.

  - Add rubber band box renderer to all displays (at least 2D ones) and send
    "rubber band" events down the transform chain so that transforms can react
    (in particular, so OverlayTransform can do multiple selection).

  - Remove, up and down buttons on capture dialog need to be grayed out
    if they are inapplicable.

  - "Displays" button should only allow displays that can properly display the
    data. So, if the data transform is 3D only, only 3D displays should be
    enabled, etc.

  - Data transforms must have a "destroy" method that is called when they are
    deleted, so that (e.g.) their GUI controls do not remain in memory.

  - Data transforms have an event they generate when their parameters change.
    Children transforms must listen to this event and react to it.
    Also update HTML description panel when data transform's parameters change.

  - Flag indicating whether latest state change should "stack up" or "replace"
    last change (if last change was of the same type as this one)

  - Command+? Macintosh Help shortcut does not function.

  - Set "Window Modified Indicator" when content has changed since last save?

  - Use java.awt.FileDialog on Mac OS X?

  - Add -Dsun.java2d.opengl=true to options, and add option to toggle it
    (Java 1.5+ only)

  - Ignore Openlab images named "Original Image."

  - Fix bug in many file readers where ImageLine is numbered upside down so
    that VisAD displays the image right side up. The numbering should be
    normal, not an upside down Linear2DSet, and then the range should be set
    in the display so that the image is displayed properly anyway. This way,
    using the VisAD cursor actually returns the proper results.

    If this breaks VisAD too much (probably would), then just have VisBio flip
    the domain sets of all images that get read in, so that the cursor is
    correct.

  - Separate OME upload logic into separate static utility method, with a given
    output stream for displaying the progress. Create a command-line upload
    utility for use doing generic client-side uploads. Put all of this into the
    loci.ome package. The only issue is how/whether to handle various file
    formats. Well, we can handle them easily if this command line utility is
    simply packaged with VisBio, since visad.jar will be available then.

  - Make sure no two data objects can have the same name. If one already does,
    append "2", "3", etc., to the end until we find a new name. If they try to
    create one with the same name as an existing one, don't let them do it.

    Probably also don't let them create two displays with the same name
    (use same strategy), because otherwise state might not restore correctly.
